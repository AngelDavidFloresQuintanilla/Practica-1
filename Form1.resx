<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>